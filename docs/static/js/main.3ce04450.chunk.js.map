{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GrifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","includes","type","value","onChange","target","GifGridItem","id","title","url","className","width","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","d","images","downsized_medium","GrifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAG1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBA,OACI,uBAAMC,SAlBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAEX,OADgBA,EAAKC,SAASR,GAEnBO,EAED,CAAGP,GAAT,mBAAwBO,OAGhCN,EAAc,MAMlB,UACI,uBACIQ,KAAK,OACLC,MAAOV,EACPW,SA1Bc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,UA2BnB,wBAAQD,KAAK,SAAb,yB,QClCCI,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,MAAM,OAAOC,IAAKH,EAAKI,IAAKL,IACjC,4BAAIA,Q,uBCRHM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbP,EAFa,iDAEmCQ,UAAUF,GAF7C,+DAGAG,MAAMT,GAHN,cAGbU,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIC,EACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QAVvB,kBAcZa,GAdY,4CAAH,sDCGPM,EAAW,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEvB,ECHwB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAE3B,EAA0BvB,mBAAS,CAC/B6B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAENlB,EAAQC,GAAUkB,MAAK,SAAAC,GAEnBC,YAAW,WACPJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEd,UAIR,CAACd,IAGGe,EDpB2BM,CAAarB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKd,IAEJc,GAAW,2CAEZ,qBAAKnB,UAAU,YAAf,SACKgB,EAAOH,KAAI,SAACC,EAAKa,GAAN,OACR,cAAC,EAAD,eAEQb,GADCa,YEZhBC,EAAe,WAExB,MAAoC9C,mBAAS,CAAC,cAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAEA,OACI,qCACI,oBAAImB,UAAU,oCAAd,0BAEA,cAAC,EAAD,CAAanB,cAAeA,IAC5B,uBACA,6BAEQgD,EAAWhB,KAAI,SAACR,EAAUsB,GACtB,OAAO,cAAC,EAAD,CAEHtB,SAAUA,GADLA,EAAWsB,Y,MCZ5CG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ce04450.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    /**Se inicializa el useState en un string vacÃ­o */\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories((cats) => {\n                const incluye = cats.includes(inputValue);\n                if (incluye) {\n                    return cats;\n                } else {\n                    return ([inputValue, ...cats]);\n                }\n            });\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n            <button type=\"submit\">Agregar</button>\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    // console.log(id, title, url);\n\n    return (\n        <div className=\"card\">\n            <img width=\"100%\" src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","\nexport const getGifs = async (category) => {\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=iKRvAz8DvgVP92NNiTtzSF4k7Bk0VRRw&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.d,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GrifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            {loading && <p>Loading...</p>}\n\n            <div className=\"card-grid\">\n                {images.map((img, key) => (\n                    <GifGridItem\n                        key={key}\n                        {...img}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ({ category }) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category).then(imgs => {\n\n            setTimeout(() => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            }, 3000);\n\n        });\n\n    }, [category]);\n\n\n    return state;\n\n}\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GrifGrid } from './components/GrifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2 className=\"animate__animated animate__shakeY\">GifExpertApp</h2>\n            \n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map((category, key) => {\n                        return <GrifGrid\n                            key={category + key}\n                            category={category}\n                        />;\n                    })\n                }\n            </ol>\n\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}